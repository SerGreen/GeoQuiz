@model GeoQuiz.Models.GameSettings
@using GeoQuiz.Models.Shared

@{
    ViewBag.Title = "Index";
    string[] allContinents = { "NA", "SA", "EU", "AS", "AF", "AU" };
    string[] ContinentNames = { "North America", "South America", "Europe", "Asia", "Africa", "Australia and Oceania" };
    int[] timeLimits = { 5, 10, 20, 0 };
    int[] answerOptions = { 3, 5, 11, 0 };
    Difficulty[] difficulties = { Difficulty.Easy, Difficulty.Medium, Difficulty.Hard, Difficulty.VeryHard };
}

<script>
    $(document).ready(function () {
        $('.btn-hover-highlight').hover(function () {
            $(this).removeClass('btn-default');
            $(this).addClass('btn-primary');
        }, function () {
            $(this).removeClass('btn-primary');
            $(this).addClass('btn-default');
        })
    });
</script>

<div class="col-sm-8">
    <!-- Left well -->
    <div class="well col-sm-12 text-center">
        <h2 class="text-muted text-uppercase">Start new game</h2>
        <hr />


        <div class="combined-button col-sm-offset-2 col-sm-8">
            <button type="button" class="btn btn-lg btn-primary btn-raised" data-toggle="modal" data-target="#start-game">Start!</button>
            <div class="btn-group-justified" data-toggle="buttons" id="gameMode">
                <label onclick="radioButtonHighlight(this)" class="btn btn-lg btn-default btn-raised @(Model.GameMode == GameMode.FlagByCountry ? "active btn-primary" : "")">
                    <input name="gameMode" value="@GameMode.FlagByCountry" type="radio">Flags
                </label>
                <label onclick="radioButtonHighlight(this)" class="btn btn-lg btn-default btn-raised @(Model.GameMode == GameMode.CountryByFlag? "active btn-primary" : "")">
                    <input name="gameMode" value="@GameMode.CountryByFlag" type="radio">Countries
                </label>
                <label onclick="radioButtonHighlight(this)" class="btn btn-lg btn-default btn-raised @(Model.GameMode == GameMode.CapitalByCountry ? "active btn-primary" : "")">
                    <input name="gameMode" value="@GameMode.CapitalByCountry" type="radio">Capitals
                </label>
            </div>
        </div>
    </div>

    <div class="well col-sm-12 text-center">
        <div class="col-sm-4">
            <h4 class="text-muted">Time limit</h4>
            <div class="radio-button-group" data-toggle="buttons" id="timeLimit">
                @for (int i = 0; i < timeLimits.Length; i++)
                {
                    <label onclick="radioButtonHighlight(this)" class="btn btn-default btn-raised @(timeLimits[i] == Model.TimeLimit ? "active btn-primary" : "")">
                        <input name="timeLimit" value="@timeLimits[i]" type="radio">
                        @if (timeLimits[i] == 0)
                        {
                            <div style="font-size:28px;margin:-10px">∞</div>
                        }
                        else
                        {
                            @($"{timeLimits[i]}s")
                        }
                    </label>
                }
            </div>
        </div>
        <div class="col-sm-4">
            <h4 class="text-muted">Answer options</h4>
            <div class="radio-button-group" data-toggle="buttons" id="answerOptions">
                @for (int i = 0; i < answerOptions.Length; i++)
                {
                    <label onclick="radioButtonHighlight(this)" class="btn btn-default btn-raised @(answerOptions[i] == Model.DistractorsAmount? "active btn-primary" : "")">
                        <input name="answerOptions" value="@answerOptions[i]" type="radio">@(answerOptions[i] + 1)
                    </label>
                }
            </div>
        </div>
        <div class="col-sm-4">
            <h4 class="text-muted">Difficulty</h4>
            <div class="radio-button-group" data-toggle="buttons" id="difficulty">
                @for (int i = 0; i < difficulties.Length; i++)
                {
                    <label onclick="radioButtonHighlight(this)" class="btn btn-default btn-raised @(difficulties[i] == Model.Difficulty ? "active btn-primary" : "")">
                        <input name="difficulty" value="@difficulties[i]" type="radio">@difficulties[i]
                    </label>
                }
            </div>
        </div>
    </div>
</div>
<!-- Right well -->
<div class="well col-sm-offset-1 col-sm-3">
    <h4 class="text-muted text-center">Continents</h4>
    <hr />

    <div>
        @for (int i = 0; i < allContinents.Length; i++)
        {
            <div class="checkbox">
                <label>
                    <input @(Model.Continents.Contains(allContinents[i]) ? "checked" : null) type="checkbox">
                    @ContinentNames[i]
                </label>
            </div>
        }
    </div>
    <hr />

    <button type="button" class="btn btn-sm btn-primary btn-raised btn-block" data-toggle="modal" data-target="#allowed-countries">Configure non-sovereign<br />countries</button>
</div>

<!-- Modals -->

<div id="start-game" class="modal fade" tabindex="-1" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h3 class="modal-title text-center">Game mode</h3>
            </div>
            <div class="modal-body">
                <div class="center-div">
                    @using (Html.BeginForm(nameof(MenuController.Index), MenuController.Nameof, new { gameMode = GameMode.FlagByCountry }))
                    {
                        <button class="btn btn-raised btn-block btn-default btn-hover-highlight" type="submit" value="Begin flags">Begin flags</button>
                    }
                    @using (Html.BeginForm(nameof(MenuController.Index), MenuController.Nameof, new { gameMode = GameMode.CountryByFlag }))
                    {
                        <button onclick="nope()" class="btn btn-raised btn-block btn-default btn-hover-highlight" type="button" value="Begin countries">Begin countries</button>
                    }
                    @using (Html.BeginForm(nameof(MenuController.Index), MenuController.Nameof, new { gameMode = GameMode.CapitalByCountry }))
                    {
                        <button onclick="nope()" class="btn btn-raised btn-block btn-default btn-hover-highlight" type="button" value="Begin capitals">Begin capitals</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div id="allowed-countries" class="modal fade" tabindex="-1" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h3 class="modal-title text-center">Caption</h3>
            </div>
            <div class="modal-body">
                <p>
                    Body of modal.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Save</button>
            </div>
        </div>
    </div>
</div>

<script>
    function nope() {
        $.snackbar({
            content: "Nope!",
            timeout: 1000
        });
    }

    // UI hoockups
    function radioButtonHighlight(button) {
        if (button) {
            $(button).siblings().removeClass('btn-primary');
            $(button).addClass('btn-primary');
        }
    }
</script>