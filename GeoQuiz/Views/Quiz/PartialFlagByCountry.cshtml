@model GeoQuiz.Models.QuestionViewModel

@{
    string mistakeText = null;
    string mistake = TempData["Mistake"] as string;
    if (mistake != null)
    {
        mistakeText = mistake == "Timeout"
            ? $"Run out of time!"
            : $"Wrong! It was flag of {mistake}";
    }

    // Caclulate grid size for answer choices
    double sqrt = Math.Sqrt(Model.Question.Choices.Length);
    double columns = Math.Ceiling(sqrt);
    double rows = Math.Ceiling(Model.Question.Choices.Length / columns);
    int currentChoice = 0;
}

<h2 class="text-center">Select flag of <span style="font-weight:bolder">@Model.Question.QuestionString</span></h2>
<hr />

<div>
    @for (int i = 0; i < rows; i++)
    {
        <div class="row text-center">
            @for (int j = 0; j < columns && currentChoice < Model.Question.Choices.Length; j++, currentChoice++)
            {
                <div class="col-xs-@(12/columns) hover-highlight answer-option">
                    <input onclick="submitAnswerAjax(@Model.Index, @Model.Question.Choices[currentChoice])" class="img-thumbnail" type="image" src="~/Content/Flags/@(Model.Question.Choices[currentChoice]).png" name="submit" />
                </div>
            }
        </div>
    }
</div>

<div hidden id="questionIndex">@Model.Index</div>
<div hidden id="correctAnswers">@Model.CorrectAnswers</div>
<div hidden id="wrongAnswers">@Model.WrongAnswers</div>
@if (mistakeText != null)
{
    <div hidden id="mistake">@mistakeText</div>
}