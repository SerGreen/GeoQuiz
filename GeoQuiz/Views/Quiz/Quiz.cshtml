@model GeoQuiz.Models.QuestionViewModel

@{
    ViewBag.Title = "Quiz";
}

<!-- Progress bar initialization script -->
<script>
    var bar;

    $(document).ready(function () {
        bar = new ProgressBar.Line('#progressbar', {
            strokeWidth: 4,
            easing: 'easeInOut',
            duration: 400,
            color: '#009688',
            trailColor: '#ccc',
            trailWidth: 1,
            svgStyle: { width: '80%', height: '100%' }
        });
                
        bar.animate((@Model.Index + 1) / @Model.TotalQuestionsCount);  // Number from 0.0 to 1.0
    });
</script>

<!-- Timer initialization script -->
<script>
    var timer;
    
    $(document).ready(function () {
        timer = new ProgressBar.Circle('#timer', {
            color: '#aaa',
            // This has to be the same size as the maximum width to
            // prevent clipping
            strokeWidth: 10,
            trailWidth: 4,
            duration: 10000,
            text: {
                autoStyleContainer: false
            },
            from: { color: '#F44336' },
            to: { color: '#666' },
            // Set default step function for all animate calls
            step: function(state, circle) {
                circle.path.setAttribute('stroke', state.color);

                var value = Math.round(circle.value() * 10);
                circle.setText(value);

            }
        });
        timer.text.style.fontFamily = '"Raleway", Helvetica, sans-serif';
        timer.text.style.fontSize = '2rem';

        timer.set(1.0)
        timer.animate(0.0);  // Number from 0.0 to 1.0
    });
</script>

<!-- LEFT WELL -->
<div class="col-sm-2 well same-height">
    <div class="text-center">
        <div class="row" style="font-size:large">
            Question <span id="current-question-index">@(Model.Index + 1)</span> / @Model.TotalQuestionsCount
            <div id="progressbar" style="width:100%; height:8px;"></div>
        </div>
        <hr />
        <div class="row">
            <div class="numberCircle" style="margin:auto; border-color:#4CAF50"><span id="correct-answers">@Model.CorrectAnswers</span></div>
            Correct answers
        </div>
        <hr />
        <div class="row">
            <div class="numberCircle" style="margin:auto; border-color:#F44336"><span id="wrong-answers">@Model.WrongAnswers</span></div>
            Wrong answers
        </div>
    </div>
</div>

<!-- MIDDLE WELL -->
<div id="question-container" class="col-xs-offset-1 col-xs-6 well same-height">
    @Html.Partial("PartialFlagByCountry", Model)
</div>

<!-- RIGHT WELL -->
<div class="col-sm-offset-1 col-sm-2 well same-height">
    <div class="row">
        <div id="timer" style="width:68px; height:68px; position:relative"></div>
        Time left
    </div>
</div>

<!-- Script that sets same height to wells -->
<script>
    var max;
    // Getting the greatest height
    $(".same-height").each(function() {
        max = ($(this).height() > max) ? $(this).height() : max;
    });
    // Applying the greatest height to each element
    $(".same-height").height(max);
</script>

<!-- AJAX submit answer function. It is used by Partial Views in Middle Well. It returns partial view with new question's HTML code. -->
<script>
    function submitAnswerAjax(questionIndex, answer) {
        var data = {
            questionIndex: questionIndex,
            answer: answer
        };

        $.ajax({
            type: 'POST',
            data: data,
            url: '@Url.Action("Quiz", "Quiz")',
            success: function (result) {
                // Display new question
                $("#question-container").html(result);

                // jQuery can't find anything if result is not inside <div>
                result = '<div>' + result + '</div>';

                // Update progress bar and counters
                var current = $('#questionIndex', result).text();
                var correct = $('#correctAnswers', result).text();
                var wrong = $('#wrongAnswers', result).text();

                bar.animate((parseInt(current) + 1) / @Model.TotalQuestionsCount);
                $('#current-question-index').text(parseInt(current) + 1);
                $('#correct-answers').text(correct);
                $('#wrong-answers').text(wrong);

                // If there was mistake, div with id="mistake" is generated
                if ($('#mistake', result).length) {
                    // Display snackbar
                    var options = {
                        content: $('#mistake', result).text(),
                        timeout: 5000
                    }
                    $.snackbar(options);
                }
            }
        });
    }
</script>